#!/usr/local/bin/spn

//
// vararg.spn
// demonstrating the usage of `call()`
// by forwarding variadic arguments
//
// Created by Arpad Goretity on 23/04/2014
//

// a tracing printf()
function tracingPrintf() {
	// print custom message
	print("You called printf!");

	// forward variadic arguments to printf()
	return call(printf, argv);
}

tracingPrintf("%d %s\n", 1337, "Hello world!");

// a `max()` function that operates on arrays
function arrayMax(arr) {
	return call(max, arr);
}

print(arrayMax({ 3, 9, 2, 3, 1, 5, 4 })); // 9

// Beware: argc is not always sizeof argv!
// e. g. if you want to pass an explicit `nil`
// argument to your function, you need to specify `argc`:
var args = { 1, 2, nil, 4 };

// this does not do what you might think it does
call(print, args); // 1, 2, nil (sizeof args == 3)

// however, this does do what it looks like it does
call(print, args, 4); // 1, 2, nil, 4

#!/usr/local/bin/spn

//
// desolver.spn
// a numeric solver for
// ordinary differential equations
//

function solvede(a, b, y0, yprime) {
  let N = 10000;
  let dx = (b - a) * 1.0 / N;
  var xv = {}, yv = {};
  var s = y0;

  for (var i = 0; i <= N; i++) {
    let x = a + i * dx;
    xv[i] = x;
    yv[i] = s;
    s += dx * yprime(x, s);
  }

  return { "x": xv, "y": yv };
}

let a  = tofloat(argv[1]),
    b  = tofloat(argv[2]),
    y0 = tofloat(argv[3]);

// XXX: DO NOT do this at home!
let src = "var x = argv[0], y = argv[1]; return " .. argv[4] .. ";";
let yprime = compile(src);

if typeof yprime != "function" {
  fprintf(stderr, "%s", yprime);
  exit(-1);
}

let sol = solvede(a, b, y0, yprime);

printf("x\ty\n");
for (var i = 0; i < sol.x.length; i++) {
  printf("%f\t%f\n", sol.x[i], sol.y[i]);
}

/*
 * compiler.h
 * Sparkling, a lightweight C-style scripting language
 *
 * Created by Árpád Goretity on 02/05/2013
 * Licensed under the 2-clause BSD License
 *
 * AST -> bytecode compiler
 */

#ifndef SPN_COMPILER_H
#define SPN_COMPILER_H

#include <stddef.h>

#include "api.h"
#include "ast.h"
#include "vm.h"
#include "func.h"

/* name of the function containing the top-level program */
#define SPN_TOPFN "<main program>"

/* a compiler object takes an AST and outputs bytecode */
typedef struct SpnCompiler SpnCompiler;

SPN_API SpnCompiler *spn_compiler_new(void);
SPN_API void         spn_compiler_free(SpnCompiler *cmp);

/* returns an SpnFunction on success, NULL on error.
 * If successful, the return value contains the generated bytecode.
 */
SPN_API SpnFunction *spn_compiler_compile(SpnCompiler *cmp, SpnAST *ast);

/* obtain the most recent error message */
SPN_API	const char  *spn_compiler_errmsg(SpnCompiler *cmp);

#endif /* SPN_COMPILER_H */
